echo "**********setting ant environment*********"

echo $JAVA_HOME
cd /usr/local/sandeep/hybris/bin/platform


echo "======ANT ======"
#!/bin/sh
OWN_NAME=setantenv.sh
BASENAME="$(basename -- "$0")"

SOURCED=0
if [ -n "$ZSH_EVAL_CONTEXT" ]; then
    [[ $ZSH_EVAL_CONTEXT =~ :file$ ]] && SOURCED=1
elif [ -n "$BASH_VERSION" ]; then
    [[ $0 != $BASH_SOURCE ]] && SOURCED=1
elif [ "$OWN_NAME" != "$BASENAME" ]; then
    SOURCED=1
fi

if [ "$SOURCED" -ne 1 ]; then
    echo "* Please call as '. ./$OWN_NAME', not './$OWN_NAME' !!!---"
    echo "* Also please DO NOT set back the executable attribute"
    echo "* On this file. It was cleared on purpose."

    chmod -x ./$OWN_NAME
    exit
fi

export PLATFORM_HOME
PLATFORM_HOME=$(pwd)
export ANT_OPTS="-Xmx2g -Dfile.encoding=UTF-8 -Djdk.util.jar.enableMultiRelease=force"
export ANT_HOME="$PLATFORM_HOME/apache-ant"
chmod +x "$ANT_HOME/bin/ant"
chmod +x "$PLATFORM_HOME/license.sh"
case "$PATH" in
    *$ANT_HOME/bin:*) ;;
    *) export PATH=$ANT_HOME/bin:$PATH ;;
esac

ant -version
echo "ant home: ${ANT_HOME}"
echo "ant opts: ${ANT_OPTS}"

echo "==== ANT END ===="


echo "****** switching to custom location for ziping training **********"
cd /var/jenkins_home/workspace/Training/bin/custom

zip -r training.zip .

echo "****** copying training zip to Local hybris *************"

rm -rf /usr/local/sandeep/hybris/bin/custom
mkdir -p /usr/local/sandeep/hybris/bin/custom
cp training.zip /usr/local/sandeep/hybris/bin/custom/

cd /usr/local/sandeep/hybris/bin/custom/
unzip training.zip
rm training.zip

cp /var/jenkins_home/workspace/Training/config/local.properties /usr/local/sandeep/hybris/config
cp /var/jenkins_home/workspace/Training/config/localextensions.xml /usr/local/sandeep/hybris/config

cd /usr/local/sandeep/hybris/bin/platform
echo "cursor at " 
pwd
ant -version
ant clean all





----

Bubbles

pipeline {
   agent any

   stages {
      stage('Checkout') {
         steps {
            checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'AuthorInChangelog'], [$class: 'WipeWorkspace']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/sandeepvalapi/Hybris.git']]])
         }
      } 
       
      stage('System Check') { 
            steps { 
                
                sh 'echo $JAVA_HOME'
                sh 'cd /usr/local/sandeep/hybris/bin/platform'


                echo "======ANT ======"
                
                sh 'sleep 14s'
                sh 'echo $JAVA_HOME' 
                sh 'cd /var/jenkins_home/workspace/Bubble/bin/custom'
                sh 'cd /var/jenkins_home/workspace/Bubble/bin/custom'
                sh 'echo wait'
                sh 'pwd'
                sh 'cd /bin/custom'
                sh 'ls -ltr'
                sh 'sleep 14s'
                sh 'zip -r training.zip .'
                sh 'ls -ltr'
                sh 'sleep 5s'
                sh 'rm -rf /usr/local/sandeep/hybris/bin/custom'
                sh 'mkdir -p /usr/local/sandeep/hybris/bin/custom'
                sh 'cp training.zip /usr/local/sandeep/hybris/bin/custom/'
            }
        }
        
         stage('Copying artifacts'){
            steps {
                sh 'cd /usr/local/sandeep/hybris/bin/custom/'
                sh 'ls -ltr'
                sh 'unzip training.zip'
                sh 'rm training.zip'
                sh 'cp /var/jenkins_home/workspace/Bubble/config/local.properties /usr/local/sandeep/hybris/config'
                sh 'cp /var/jenkins_home/workspace/Bubble/config/localextensions.xml /usr/local/sandeep/hybris/config'

                sh 'cd /usr/local/sandeep/hybris/bin/platform'
                sh 'ant -version'
                sh 'ant clean all'


            }
        }
       
     
   }
}


----------

stage('Copying artifacts'){
            steps {
                sh 'cd /usr/local/sandeep/hybris/bin/backup/'
                sh 'pwd'
                sh 'sleep 5s'
                sh 'ls -ltr'
                sh 'unzip training.zip'
                sh 'ls -ltr'
                sh 'sleep 10s'
                sh 'cp -a /usr/local/sandeep/hybris/bin/backup/bin/custom/ /usr/local/sandeep/hybris/bin/custom/'
               
                sh 'cp /usr/local/sandeep/hybris/bin/backup/config/local.properties /usr/local/sandeep/hybris/config'
                sh 'cp /usr/local/sandeep/hybris/bin/backup/config/localextensions.xml /usr/local/sandeep/hybris/config'

                sh 'cd /usr/local/sandeep/hybris/bin/platform'
                sh 'rm -rf /usr/local/sandeep/hybris/bin/backup/'
                sh 'ant -version'
                sh 'ant clean all'


            }
        }

        ------

  
        pipeline {
   agent any

   stages {
      stage('Checkout') {
         steps {
            checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'AuthorInChangelog'], [$class: 'WipeWorkspace']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/sandeepvalapi/Hybris.git']]])
         }
      } 
       
      stage('System Check') { 
            steps { 
                sh '#!/bin/sh'
                sh 'echo $JAVA_HOME'
                
                dir('/var/jenkins_home/workspace/Bubble/bin/custom'){
                    sh "$PWD"
                    sh 'zip -r training.zip .'
                    sh 'ls -ltr'
                    sh 'sleep 5s'
                    dir('/usr/local/sandeep/hybris/bin/custom'){
                        deleteDir()
                    }
                sh 'mkdir -p /usr/local/sandeep/hybris/bin/backup'
                sh 'cp training.zip /usr/local/sandeep/hybris/bin/backup/'
                sh 'mkdir -p /usr/local/sandeep/hybris/bin/custom'
                }
             
                
                
                
                
                
                
            }
        }
        
         
       
     
   }
}


